# Generated by Django 5.1.3 on 2024-12-03 04:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "nickname",
                    models.CharField(
                        help_text="2~10자의 닉네임을 입력하세요.",
                        max_length=10,
                        unique=True,
                        validators=[django.core.validators.MinLengthValidator(2)],
                    ),
                ),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="profiles/%Y/%m/%d/"
                    ),
                ),
                ("district", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "neighborhood",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "활성"),
                            ("inactive", "비활성"),
                            ("suspended", "정지"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("status_changed_at", models.DateTimeField(blank=True, null=True)),
                ("status_reason", models.TextField(blank=True, null=True)),
                ("last_login_at", models.DateTimeField(blank=True, null=True)),
                ("is_social", models.BooleanField(default=False)),
                (
                    "social_provider",
                    models.CharField(
                        blank=True,
                        choices=[("kakao", "카카오"), ("google", "구글")],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("social_id", models.CharField(blank=True, max_length=100, null=True)),
                ("push_enabled", models.BooleanField(default=True)),
                ("message_notification", models.BooleanField(default=True)),
                ("friend_notification", models.BooleanField(default=True)),
                ("comment_notification", models.BooleanField(default=True)),
                ("like_notification", models.BooleanField(default=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="custom_user_set",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="custom_user_set",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "사용자",
                "verbose_name_plural": "사용자 목록",
                "permissions": [("can_view_profile", "Can view profile")],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "bio",
                    models.TextField(
                        blank=True, help_text="자기소개를 500자 이내로 작성하세요.", max_length=500
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "사용자 프로필",
                "verbose_name_plural": "사용자 프로필 목록",
            },
        ),
    ]
